buildscript {
    dependencies {
        classpath("org.postgresql:postgresql:42.7.4")
        classpath("org.flywaydb:flyway-database-postgresql:11.1.0")
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.1'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '11.1.0'
}

group = 'gg.nya'
version = '0.0.1-SNAPSHOT'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

flyway {
    def dbProps = new Properties()
    file("config/${env}.properties").withInputStream { dbProps.load(it) }

    url = dbProps.getProperty('db.url')
    user = dbProps.getProperty('db.user')
    password = dbProps.getProperty('db.password')
    driver = 'org.postgresql.Driver'

    cleanDisabled = env != 'local'
}

configurations.configureEach {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation(platform('software.amazon.awssdk:bom:2.27.21'))
    implementation 'software.amazon.awssdk:s3'
    implementation 'software.amazon.awssdk:sso'
    implementation 'software.amazon.awssdk:ssooidc'
    implementation 'org.apache.logging.log4j:log4j-api:2.24.3'
    implementation 'org.apache.logging.log4j:log4j-core:2.24.3'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'
    implementation 'org.postgresql:postgresql'
    implementation platform('org.joinfaces:joinfaces-platform:5.3.4')
    implementation 'org.joinfaces:faces-spring-boot-starter'
    implementation 'org.joinfaces:primefaces-spring-boot-starter'
    testImplementation "org.springframework.boot:spring-boot-starter-test"
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.security:spring-security-crypto'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.session:spring-session-jdbc'
}

tasks.named('test') {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}
